* 다시 풀어보기~~~~
한줄 요약 비트마스크 + 다익케스트라를 활용하여 푼다. (오픈북했다..)
ArrayList set라는 함수를 알게되었다 ㅎㅎ 

1. n 크기의 정방향, 역방향 매트릭스를 생성한다.
2. 매트릭스는 안에는 어디로가는지, 거리, 함정인지 알 수 있는 비트 마스트를 설정한다.
3. n X ( 2^트랩의 갯수) 2차원 ArrayList 생성하고 그 안에는 int 최대값에 근접하는 21억을 넣는다. (최대 1000 x 1000)
4. 초기 상태를 셋팅 완료후  PriorityQueue 시작 상태의 큐를 넣는다.
5. 한번 갔던 함정은 다시 가지 않는다.
6. 이미 같은 함정들을 거치 상태에서 to -> from 이 적혀있는 거리가 지금보다 온 거리보다 작다면 제외
7. 정방향에서 갈 수 있는 노드들을 조건에 맞다면 pq에 넣기( 함정 -> 비함정, 비함정 -> 함정, 함정 -> 함정, 비함정 -> 비함정)
7-1. 조건 현재방이 함정이고 한번 들렸다면 제외
7-2. 가는 방이 함정이고 이미 한번 들렸다면 제외 
7-3. 8,9 둘다 충족하면 제외에서 제외(함정 -> 함정), (비함정 -> 비함정)
7-4. 위에 조건에 충족해도 같은 함정을 지나온 상태와 가고자 하는 방에 거리가 기록된 거리보다 크다면 제외

8. 역방향에서 갈 수 있는 노드들을 조건에 맞다면 pq에 넣기
8 -1 7번 조건과 비슷하며 (비함정 -> 함정), (함정 -> 비함정)을 고려한다.