import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		StringTokenizer st;

		st = new StringTokenizer(br.readLine(), " ");

		int K = Integer.parseInt(st.nextToken());
		int [][]arr= new int [K][3];
		int [][]mem = new int [K][3];
		for(int i = 0; i < K; i++) {
			st = new StringTokenizer(br.readLine(), " ");
			arr[i][0] = Integer.parseInt(st.nextToken());
			arr[i][1] = Integer.parseInt(st.nextToken());
			arr[i][2] = Integer.parseInt(st.nextToken());
		}
		mem[0][0] = arr[0][0];
		mem[0][1] = arr[0][1];
		mem[0][2] = arr[0][2];
		
		for(int i = 1; i < K; i++) {
			mem[i][0] = arr[i][0] + Math.max(mem[i - 1][0], mem[i - 1][1]); 
			mem[i][1] = arr[i][1] + Math.max(mem[i - 1][0], Math.max(mem[i - 1][1], mem[i - 1][2]));
			mem[i][2] = arr[i][2] + Math.max(mem[i - 1][1], mem[i - 1][2]);
		}
		int max = Math.max(mem[K - 1][0], Math.max(mem[K - 1][1], mem[K - 1][2]));
		
		for(int i = 1; i < K; i++) {
			mem[i][0] = arr[i][0] + Math.min(mem[i - 1][0], mem[i - 1][1]); 
			mem[i][1] = arr[i][1] + Math.min(mem[i - 1][0], Math.min(mem[i - 1][1], mem[i - 1][2]));
			mem[i][2] = arr[i][2] + Math.min(mem[i - 1][1], mem[i - 1][2]);
		}
		
		int min = Math.min(mem[K - 1][0], Math.min(mem[K - 1][1], mem[K - 1][2]));
		
		System.out.println(max + " " + min);
	}
}
