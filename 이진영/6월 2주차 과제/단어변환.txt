import java.util.*;

class Solution {
    public int solution(String begin, String target, String[] words) {
        int answer = 0;
        boolean []ch = new boolean[words.length];
        boolean isans = false;
        for(String s : words){
            if(s.equals(target))isans = true;
        }
        
        if(!isans){
            return 0;
        }
        
        Queue<String> q = new LinkedList<>();
        q.add(begin);
        int ans = 1;
        while(!q.isEmpty()){
            int size = q.size();
            
            for(int n = 0; n < size; n++){
                String str= q.poll();
                if(str.equals(target)){
                    return ans - 1;
                }
                for(int i = 0 ; i < words.length; i++){
                    if(diff(str, words[i]) && !ch[i]){
                      ch[i] = true;
                       q.add(words[i]);
                    }
                 }
            }
            ans++;
        }
        return answer;
    }
    static public boolean diff(String s1, String s2){
        int cnt = 0;
        int i = 0;
        for(int j = 0; j < s1.length(); j++){
            if(s1.charAt(j) != s2.charAt(i))cnt++;
            i++;
        }
        if(cnt <= 1)return true;
        return false;
    }
}