package B17136색종이붙이기;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {
	static int [][]arr, integer;
	static int Max = Integer.MAX_VALUE;
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		StringTokenizer st;

	
		arr = new int[11][11];
		integer = new int[11][11];
		for(int i = 1; i < 11; i++) {
			st = new StringTokenizer(br.readLine(), " ");
			for(int j = 1; j < 11; j++) {
				arr[i][j] = Integer.parseInt(st.nextToken());
		
			}

		}
		for(int i = 0; i < 10; i++)integer[i][0] = arr[i][0];
		for(int i = 0; i < 10; i++)integer[0][i] = arr[0][i];
	
		for(int i = 1; i < 11; i++) {
			for(int j = 1; j < 11; j++) {
				integer[i][j] = arr[i][j] + integer[i - 1][j] + integer[i][j - 1] - integer[i - 1][j - 1]; 
			}
		}
		
		
		int []num = new int[6];
		for(int i = 1; i <= 5; i++)num[i] = 5;
		dfs(0, num, 0);
		if(Max == Integer.MAX_VALUE)Max = -1;
		System.out.println(Max);
	}
	static void dfs(int x, int[] num, int ccnt) {
		if(x == 100) {
			if(Max > ccnt)Max = ccnt;
			return;
		}
		int ny = x / 10 + 1;
		int nx = x % 10 + 1;
		if(arr[ny][nx] == 0) {
			
			dfs(x + 1,num, ccnt);
		
		}else {
			for(int i = 1; i <= 5; i++) {
				//System.out.println(ny + " " + nx + " " + i);
				if(check(ny, nx, i) && num[i] >= 1) {
					//System.out.println(ny + " " + nx + " " + i);
					fillnum(ny, nx, i, 0);
					num[i]--;
					dfs(x + i,num, ccnt + 1);//1
					num[i]++;
					fillnum(ny, nx, i, 1);
				}
			}
		}
	}
	static void fillnum(int ny, int nx, int size, int num) {
		for(int i = ny; i < ny + size; i++) {
			for(int j = nx; j < nx + size; j++) {
				arr[i][j] = num;
			}
		}
	}
	static boolean check(int ny, int nx,int s) {
		if(ny + s > 11 || nx + s > 11 || nx - 1 < 0 || ny - 1 < 0)return false;
		int tnum = 0;
		//integer[ny + s][nx + s] - integer[ny - 1][nx + s] - integer[ny + s][nx - 1] + integer[ny - 1][nx - 1];
		for(int i = ny; i < ny + s; i++) {
			for(int j = nx; j < nx + s; j++) {
				tnum += arr[i][j];
			}
		}
		//System.out.println(tnum);
		if(tnum == s * s)return true;
		return false;
	}
}
