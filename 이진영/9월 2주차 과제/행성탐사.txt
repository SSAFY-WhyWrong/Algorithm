import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

public class Main {
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		
		StringTokenizer st = new StringTokenizer(br.readLine(), " ");
		int r = Integer.parseInt(st.nextToken());
		
		int c = Integer.parseInt(st.nextToken());
		
		st = new StringTokenizer(br.readLine(), " ");
		
		int cnt = Integer.parseInt(st.nextToken());
		
		int [][] osum = new int[r + 1][c + 1];
		int [][] isum = new int[r + 1][c + 1];	
		for(int i = 0; i < r; i++) {
			String str = br.readLine();
			for(int j = 0; j < c; j++) {
				char a = str.charAt(j);
				if(a == 'O') {
					osum[i + 1][j + 1] = 1 + osum[i][j + 1] + osum[i + 1][j] - osum[i][j];
					isum[i + 1][j + 1] = isum[i][j + 1] + isum[i + 1][j] - isum[i][j];
				}else if(a == 'I') {
					osum[i + 1][j + 1] = osum[i][j + 1] + osum[i + 1][j] - osum[i][j];
					isum[i + 1][j + 1] = 1 + isum[i][j + 1] + isum[i + 1][j] - isum[i][j];
				}else {
					osum[i + 1][j + 1] = osum[i][j + 1] + osum[i + 1][j] - osum[i][j];
					isum[i + 1][j + 1] = isum[i][j + 1] + isum[i + 1][j] - isum[i][j];
				}
			}
		}
		
		StringBuilder sb = new StringBuilder();
		for(int k = 0; k < cnt; k++) {
			st = new StringTokenizer(br.readLine(), " ");
			int sx = Integer.parseInt(st.nextToken());
			int sy = Integer.parseInt(st.nextToken());
			int ex = Integer.parseInt(st.nextToken());
			int ey = Integer.parseInt(st.nextToken());
			int total = (ex - sx + 1) * (ey - sy + 1);
			int ores = osum[sx - 1][sy - 1] + osum[ex][ey] - osum[ex][sy - 1] - osum[sx - 1][ey];
			int ires = isum[sx - 1][sy - 1] + isum[ex][ey] - isum[ex][sy - 1] - isum[sx - 1][ey];
			total = total - ores - ires;
			sb.append(total + " " + ores + " " + ires+ "\n");
		}
        System.out.println(sb);
		
		
	}
}
